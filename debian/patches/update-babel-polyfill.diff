Description: fix for babel7
Author: Xavier Guimard <yadd@debian.org>
Forwarded: no
Last-Update: 2021-01-21

--- a/build/test-replacements.js
+++ b/build/test-replacements.js
@@ -123,7 +123,6 @@
     , [
       /^/,
       `/*<replacement>*/
-      require('babel-polyfill');
       var util = require('util');
       for (var i in util) exports[i] = util[i];
       /*</replacement>*/`
--- a/test/common/README.md
+++ b/test/common/README.md
@@ -1,5 +1,4 @@
 /*<replacement>*/
-      require('babel-polyfill');
       var util = require('util');
       for (var i in util) exports[i] = util[i];
       /*</replacement>*//*<replacement>*/
--- a/test/common/benchmark.js
+++ b/test/common/benchmark.js
@@ -1,5 +1,4 @@
 /*<replacement>*/
-require('babel-polyfill');
 var util = require('util');
 for (var i in util) {
   exports[i] = util[i];
@@ -59,4 +58,4 @@
   for (var i = 0, l = xs.length; i < l; i++) {
     f(xs[i], i);
   }
-}
\ No newline at end of file
+}
--- a/test/common/countdown.js
+++ b/test/common/countdown.js
@@ -3,7 +3,6 @@
 function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
 
 /*<replacement>*/
-require('babel-polyfill');
 var util = require('util');
 for (var i in util) {
   exports[i] = util[i];
@@ -67,4 +66,4 @@
   for (var i = 0, l = xs.length; i < l; i++) {
     f(xs[i], i);
   }
-}
\ No newline at end of file
+}
--- a/test/common/dns.js
+++ b/test/common/dns.js
@@ -1,7 +1,6 @@
 var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();
 
 /*<replacement>*/
-require('babel-polyfill');
 var util = require('util');
 for (var i in util) {
   exports[i] = util[i];
@@ -415,4 +414,4 @@
   for (var i = 0, l = xs.length; i < l; i++) {
     f(xs[i], i);
   }
-}
\ No newline at end of file
+}
--- a/test/common/duplexpair.js
+++ b/test/common/duplexpair.js
@@ -5,7 +5,6 @@
 function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
 
 /*<replacement>*/
-require('babel-polyfill');
 var util = require('util');
 for (var i in util) {
   exports[i] = util[i];
@@ -91,4 +90,4 @@
   for (var i = 0, l = xs.length; i < l; i++) {
     f(xs[i], i);
   }
-}
\ No newline at end of file
+}
--- a/test/common/fixtures.js
+++ b/test/common/fixtures.js
@@ -1,7 +1,6 @@
 function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
 
 /*<replacement>*/
-require('babel-polyfill');
 var util = require('util');
 for (var i in util) {
   exports[i] = util[i];
@@ -62,4 +61,4 @@
   for (var i = 0, l = xs.length; i < l; i++) {
     f(xs[i], i);
   }
-}
\ No newline at end of file
+}
--- a/test/common/index.js
+++ b/test/common/index.js
@@ -3,7 +3,6 @@
 function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
 
 /*<replacement>*/
-require('babel-polyfill');
 var util = require('util');
 for (var i in util) {
   exports[i] = util[i];
--- a/test/common/index.mjs
+++ b/test/common/index.mjs
@@ -1,5 +1,4 @@
 /*<replacement>*/
-      require('babel-polyfill');
       var util = require('util');
       for (var i in util) exports[i] = util[i];
       /*</replacement>*//*<replacement>*/
--- a/test/common/inspector-helper.js
+++ b/test/common/inspector-helper.js
@@ -1,7 +1,6 @@
 function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
 
 /*<replacement>*/
-require('babel-polyfill');
 var util = require('util');
 for (var i in util) {
   exports[i] = util[i];
@@ -518,4 +517,4 @@
   for (var i = 0, l = xs.length; i < l; i++) {
     f(xs[i], i);
   }
-}
\ No newline at end of file
+}
--- a/test/common/wpt.js
+++ b/test/common/wpt.js
@@ -1,5 +1,4 @@
 /*<replacement>*/
-require('babel-polyfill');
 var util = require('util');
 for (var i in util) {
   exports[i] = util[i];
@@ -61,4 +60,4 @@
   for (var i = 0, l = xs.length; i < l; i++) {
     f(xs[i], i);
   }
-}
\ No newline at end of file
+}
